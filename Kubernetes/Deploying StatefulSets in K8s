Containers are designed to be stateless
They use ephemeral storage
Pods can be stateful using volumes
Database runs are challenging due to 
1. Lack of stable naming convention
2. Lack of stable persistent storage per Pod

StatefulSets bring the concept of ReplicaSets to stateful Pods
It enables running pods in clustered modes
These are usually ideal for deploying highly available database workloads
It is usually valuable for apps that need:
1. Stable, unique network identifiers
2. Stable, persistent storage
3. Ordered, graceful deployment and scaling
4. Ordered, graceful deletion and termination

K8s StatefulSets depend on a headless service for pod-pod communication
Each pod gets a DNS name accessible to other pods in the Set
It leverages persistent volumes and persistent volume claims
Each pod is suffixed with a predictable, consistent ordinal index
Pods are created sequentially, which allows a master/slave configuration
Identity is consistent regardless of the node the pod is scheduled on
Pods are terminated in LIFO Order

